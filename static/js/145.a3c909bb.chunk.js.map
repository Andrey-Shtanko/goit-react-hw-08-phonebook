{"version":3,"file":"static/js/145.a3c909bb.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/App.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContsctList.styled.jsx","components/ContactList/ContsctList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  width: 300px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const AddButton = styled.button`\n  border-radius: 3px;\n  border: 0;\n  line-height: 1.5;\n  padding: 0 20px;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  color: #fbff00;\n  text-shadow: 1px 1px 1px #000;\n  border-radius: 10px;\n  background-color: #00eeff;\n  background-image: linear-gradient(\n    to top left,\n    rgba(0, 0, 0, 0.2),\n    rgba(0, 0, 0, 0.2) 30%,\n    rgba(0, 0, 0, 0)\n  );\n  box-shadow: inset 2px 2px 3px rgba(255, 255, 255, 0.6),\n    inset -2px -2px 3px rgba(0, 0, 0, 0.6);\n  &:hover {\n    background-color: #00ff40;\n  }\n\n  &:active {\n    box-shadow: inset -2px -2px 3px rgba(255, 255, 255, 0.6),\n      inset 2px 2px 3px rgba(0, 0, 0, 0.6);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n`;\n","import { Form, Label, AddButton } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/contacts/operations';\n\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [contactName, setContactName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setContactName(event.currentTarget.value);\n        break;\n      case 'number':\n        setPhone(event.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts\n        .map(({ name }) => name.toLocaleLowerCase())\n        .some(name => name === contactName.toLocaleLowerCase())\n    ) {\n      return toast(`${contactName} is already in contacts`, {\n        duration: 4000,\n        position: 'top-center',\n\n        // Styling\n        style: {},\n        className: '',\n\n        // // Custom Icon\n        // icon: '👏',\n\n        // Change colors of success/error/loading icon\n        iconTheme: {\n          primary: '#000',\n          secondary: '#fff',\n        },\n\n        // Aria\n        ariaProps: {\n          role: 'status',\n          'aria-live': 'polite',\n        },\n      });\n      // return alert(`${contactName} is already in contacts`);\n    }\n    const contact = {\n      contactName,\n      phone,\n    };\n    dispatch(addContact(contact));\n\n    formReset();\n  };\n\n  const formReset = () => {\n    setContactName('');\n    setPhone('');\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={contactName}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <input\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nexport const FilterField = styled.div`\n  display: flex;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-bottom: 20px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 20px;\n`;\n","import { FilterField, FilterLabel } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filteredContact } from 'Redux/contacts/contactsSlice';\nimport { useState } from 'react';\nexport const Filter = () => {\n  const [filterValue, setFilterValue] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    setFilterValue(event.target.value);\n    dispatch(filteredContact(event.target.value));\n  };\n\n  return (\n    <FilterField>\n      <FilterLabel>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterField>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px;\n  border: 1px solid gray;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Contact = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  min-width: 250px;\n`;\n\nexport const ContactName = styled.span`\n  font-weight: 700;\n  font-size: 24px;\n`;\nexport const DeleteButton = styled.button`\n  border-radius: 3px;\n  border: 0;\n  line-height: 1.5;\n  padding: 0 20px;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  color: #fbff00;\n  text-shadow: 1px 1px 1px #000;\n  border-radius: 10px;\n  background-color: #00eeff;\n  background-image: linear-gradient(\n    to top left,\n    rgba(0, 0, 0, 0.2),\n    rgba(0, 0, 0, 0.2) 30%,\n    rgba(0, 0, 0, 0)\n  );\n  box-shadow: inset 2px 2px 3px rgba(255, 255, 255, 0.6),\n    inset -2px -2px 3px rgba(0, 0, 0, 0.6);\n  &:hover {\n    background-color: #ff0000;\n  }\n\n  &:active {\n    box-shadow: inset -2px -2px 3px rgba(255, 255, 255, 0.6),\n      inset 2px 2px 3px rgba(0, 0, 0, 0.6);\n  }\n`;\n","import {\n  List,\n  ListItem,\n  Contact,\n  ContactName,\n  DeleteButton,\n} from './ContsctList.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from './../../Redux/contacts/operations';\nimport {\n  selectIsLoading,\n  selectVisibleontacts,\n} from 'Redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const deleteContactById = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const visibleContacts = useSelector(selectVisibleontacts);\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            <Contact>\n              <ContactName>{name}:</ContactName>\n              <span>{number}</span>\n            </Contact>\n\n            <DeleteButton\n              onClick={() => deleteContactById(id)}\n              disabled={isLoading}\n            >\n              Delete\n            </DeleteButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","// import { ContactForm } from '/components/ContactForm/ContactForm';\n// import { Filter } from './Filter/Filter';\n// import { ContactList } from './ContactList/ContsctList';\n// import { Loading } from './Loading/Loading';\n// import { Container } from './App.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n// import { fetchContacts } from './../Redux/operations';\n\nimport { getIsContactExist } from './../../Redux/contacts/selectors';\nimport { fetchContacts } from './../../Redux/contacts/operations';\nimport { Container } from './../../components/App.styled';\nimport { ContactForm } from './../../components/ContactForm/ContactForm';\nimport { Filter } from './../../components/Filter/Filter';\nimport { Loading } from './../../components/Loading/Loading';\nimport { ContactList } from './../../components/ContactList/ContsctList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getIsContactExist);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <Loading />\n      {contacts && <ContactList />}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","AddButton","Container","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","useState","contactName","setContactName","phone","setPhone","handleChange","event","currentTarget","name","value","formReset","onSubmit","preventDefault","map","toLocaleLowerCase","some","toast","duration","position","style","className","iconTheme","primary","secondary","ariaProps","role","contact","addContact","onChange","type","pattern","title","required","FilterField","FilterLabel","Filter","filterValue","setFilterValue","target","filteredContact","List","ListItem","Contact","ContactName","DeleteButton","ContactList","isLoading","selectIsLoading","visibleContacts","selectVisibleontacts","id","number","onClick","contactId","deleteContact","disabled","getIsContactExist","useEffect","fetchContacts","Loading"],"sourceRoot":""}